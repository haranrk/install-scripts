" Load plugins using vim-plug
if !empty(glob("~/.vim/autoload/plug.vim"))
	call plug#begin()

	    Plug 'christoomey/vim-tmux-navigator'
	    Plug 'qpkorr/vim-renamer'
	    Plug 'morhetz/gruvbox'
	    Plug 'itchyny/lightline.vim'
	    Plug 'tpope/vim-fugitive'
	    Plug 'tpope/vim-surround'
	    Plug 'tpope/vim-repeat'
	    Plug 'junegunn/fzf.vim'
	    Plug 'easymotion/vim-easymotion'
	    Plug 'scrooloose/nerdcommenter'
            Plug 'scrooloose/nerdtree'  " file list
            if has('nvim')
	      Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
	    else
	      Plug 'Shougo/deoplete.nvim'
	      Plug 'roxma/nvim-yarp'
	      Plug 'roxma/vim-hug-neovim-rpc'
	    endif
	    Plug 'deoplete-plugins/deoplete-jedi'
	    Plug 'wellle/tmux-complete.vim'
	call plug#end()
	let g:deoplete#enable_at_startup = 1
        call deoplete#custom#option({
        \ 'auto_complete_delay': 0,
        \ 'smart_case': v:true,
        \ })
        "https://vi.stackexchange.com/questions/19675/cycle-through-autocomplete-menu-using-tab
        inoremap <expr> <TAB> pumvisible() ? "\<C-n>" : "\<TAB>"
        inoremap <expr> <S-TAB> pumvisible() ? "\<C-p>" : "\<TAB>"

	colorscheme gruvbox
        let g:lightline = {'colorscheme': 'gruvbox'}
endif

"Lightline
set laststatus=2

"Keybindings
set pastetoggle=<F2>
nmap <F3> :w<CR>
vmap <F3> <Esc>:w<CR>gv
imap <F3> <Esc>:w<CR>

"General
filetype plugin indent on
syntax on
"autocmd CursorHold,CursorHoldI * update

"UI
set cursorline 
set background=dark
set number 
set wildmenu
set lazyredraw
set showmatch
set incsearch           " search as characters are entered
set hlsearch            " highlight matches

"Tabs
set tabstop=8 
set softtabstop=0 
set expandtab 
set shiftwidth=4 
set smarttab

"NerdTree 
" toggle nerdtree on ctrl+n
map <C-n> :NERDTreeToggle<CR>
map <C-t> :set nosplitright<CR>:TagbarToggle<CR>:set splitright<CR>

