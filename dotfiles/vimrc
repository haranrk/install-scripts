" Load plugins using vim-plug
if !empty(glob("~/.vim/autoload/plug.vim"))
	call plug#begin()
	    Plug 'christoomey/vim-tmux-navigator'
	    Plug 'qpkorr/vim-renamer'
	    Plug 'morhetz/gruvbox'
	    Plug 'itchyny/lightline.vim'
	    Plug 'tpope/vim-fugitive'
	    Plug 'tpope/vim-surround'
	    Plug 'tpope/vim-repeat'
	    Plug 'junegunn/fzf.vim'
	    Plug 'easymotion/vim-easymotion'
	    Plug 'scrooloose/nerdcommenter'
	call plug#end()
	colorscheme gruvbox
        let g:lightline = {'colorscheme': 'gruvbox'}
endif

"Lightline
set laststatus=2

"Keybindings
set pastetoggle=<F2>
nmap <F3> :w<CR>
vmap <F3> <Esc>:w<CR>gv
imap <F3> <Esc>:w<CR>

"General
filetype plugin indent on
syntax on
autocmd CursorHold,CursorHoldI * update

"UI
set cursorline 
set background=dark
set number 
set wildmenu
set lazyredraw
set showmatch
set incsearch           " search as characters are entered
set hlsearch            " highlight matches

"Tabs
set tabstop=8 
set softtabstop=0 
set expandtab 
set shiftwidth=4 
set smarttab

"To persisit codefolds across sessions
autocmd BufWinLeave *.* mkview
autocmd BufWinEnter *.* silent loadview

"Change cursor type based on mode
if has("autocmd")
  au VimEnter,InsertLeave * silent execute '!echo -ne "\e[1 q"' | redraw!
  au InsertEnter,InsertChange *
    \ if v:insertmode == 'i' |
    \   silent execute '!echo -ne "\e[5 q"' | redraw! |
    \ elseif v:insertmode == 'r' |
    \   silent execute '!echo -ne "\e[3 q"' | redraw! |
    \ endif
  au VimLeave * silent execute '!echo -ne "\e[ q"' | redraw!
endif
